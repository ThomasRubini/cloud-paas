# Default values for deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/thomasrubini/cloud-paas
  # This sets the pull policy for images.
  pullPolicy: Always


# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: paas.cassiopeia.dopolytech.fr
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: paas-tls
     hosts:
       - paas.cassiopeia.dopolytech.fr

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 8080
readinessProbe:
  httpGet:
    path: /
    port: 8080


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

env:
  - name: DB_URL
    value: "host=paas-postgresql user=paas dbname=paas"
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        key: postgres_password
        name: paas-secrets
  - name: REPO_FETCH_ENABLE
    value: "true"
  - name: REPO_FETCH_PERIOD_SECS
    value: "120"
  - name: REPO_DIR
    value: "/tmp/repos"
  - name: SECRETS_IMPL
    value: "file"
  - name: SECRETS_IMPL_FILE
    value: "./paas-data/secrets.json"
  - name: REGISTRY_REPO_URI
    valueFrom:
      secretKeyRef:
        key: registry_repo_uri
        name: paas-secrets
  - name: REGISTRY_USER
    valueFrom:
      secretKeyRef:REGISTRY_REPO_URI
        key: registry_user
        name: paas-secrets
  - name: REGISTRY_PASSWORD
    valueFrom:
      secretKeyRef:
        key: registry_password
        name: paas-secrets


postgresql:
  enabled: true
  auth:
    username: paas
    password: "paas"
    database: paas
  primary:
    persistence:
      enabled: true
      size: 8Gi
